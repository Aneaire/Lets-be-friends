/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as PeopleIndexImport } from './routes/people/index'
import { Route as ManagePlansIndexImport } from './routes/manage-plans/index'
import { Route as ExploreIndexImport } from './routes/explore/index'
import { Route as CollectionIndexImport } from './routes/collection/index'
import { Route as ChatsIndexImport } from './routes/chats/index'
import { Route as VerificationSecretImport } from './routes/verification/$secret'
import { Route as ReviewReviewIdImport } from './routes/review/$reviewId'
import { Route as ProfileUserIdImport } from './routes/profile/$userId'
import { Route as PostPostIdImport } from './routes/post/$postId'
import { Route as ChatsConversationImport } from './routes/chats/$conversation'
import { Route as BookingBookingIdImport } from './routes/booking/$bookingId'
import { Route as ProfileUpdateProfileIndexImport } from './routes/profile/update-profile/index'
import { Route as PostCreatePostIndexImport } from './routes/post/create-post/index'
import { Route as BookingHistoryIndexImport } from './routes/booking/history/index'
import { Route as ReviewCreateReviewUserIdImport } from './routes/review/create-review/$userId'
import { Route as ProfileScheduleSupportIdImport } from './routes/profile/schedule/$supportId'
import { Route as PostUpdatePostPostIdImport } from './routes/post/update-post/$postId'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const PeopleIndexRoute = PeopleIndexImport.update({
  path: '/people/',
  getParentRoute: () => rootRoute,
} as any)

const ManagePlansIndexRoute = ManagePlansIndexImport.update({
  path: '/manage-plans/',
  getParentRoute: () => rootRoute,
} as any)

const ExploreIndexRoute = ExploreIndexImport.update({
  path: '/explore/',
  getParentRoute: () => rootRoute,
} as any)

const CollectionIndexRoute = CollectionIndexImport.update({
  path: '/collection/',
  getParentRoute: () => rootRoute,
} as any)

const ChatsIndexRoute = ChatsIndexImport.update({
  path: '/chats/',
  getParentRoute: () => rootRoute,
} as any)

const VerificationSecretRoute = VerificationSecretImport.update({
  path: '/verification/$secret',
  getParentRoute: () => rootRoute,
} as any)

const ReviewReviewIdRoute = ReviewReviewIdImport.update({
  path: '/review/$reviewId',
  getParentRoute: () => rootRoute,
} as any)

const ProfileUserIdRoute = ProfileUserIdImport.update({
  path: '/profile/$userId',
  getParentRoute: () => rootRoute,
} as any)

const PostPostIdRoute = PostPostIdImport.update({
  path: '/post/$postId',
  getParentRoute: () => rootRoute,
} as any)

const ChatsConversationRoute = ChatsConversationImport.update({
  path: '/chats/$conversation',
  getParentRoute: () => rootRoute,
} as any)

const BookingBookingIdRoute = BookingBookingIdImport.update({
  path: '/booking/$bookingId',
  getParentRoute: () => rootRoute,
} as any)

const ProfileUpdateProfileIndexRoute = ProfileUpdateProfileIndexImport.update({
  path: '/profile/update-profile/',
  getParentRoute: () => rootRoute,
} as any)

const PostCreatePostIndexRoute = PostCreatePostIndexImport.update({
  path: '/post/create-post/',
  getParentRoute: () => rootRoute,
} as any)

const BookingHistoryIndexRoute = BookingHistoryIndexImport.update({
  path: '/booking/history/',
  getParentRoute: () => rootRoute,
} as any)

const ReviewCreateReviewUserIdRoute = ReviewCreateReviewUserIdImport.update({
  path: '/review/create-review/$userId',
  getParentRoute: () => rootRoute,
} as any)

const ProfileScheduleSupportIdRoute = ProfileScheduleSupportIdImport.update({
  path: '/profile/schedule/$supportId',
  getParentRoute: () => rootRoute,
} as any)

const PostUpdatePostPostIdRoute = PostUpdatePostPostIdImport.update({
  path: '/post/update-post/$postId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/booking/$bookingId': {
      id: '/booking/$bookingId'
      path: '/booking/$bookingId'
      fullPath: '/booking/$bookingId'
      preLoaderRoute: typeof BookingBookingIdImport
      parentRoute: typeof rootRoute
    }
    '/chats/$conversation': {
      id: '/chats/$conversation'
      path: '/chats/$conversation'
      fullPath: '/chats/$conversation'
      preLoaderRoute: typeof ChatsConversationImport
      parentRoute: typeof rootRoute
    }
    '/post/$postId': {
      id: '/post/$postId'
      path: '/post/$postId'
      fullPath: '/post/$postId'
      preLoaderRoute: typeof PostPostIdImport
      parentRoute: typeof rootRoute
    }
    '/profile/$userId': {
      id: '/profile/$userId'
      path: '/profile/$userId'
      fullPath: '/profile/$userId'
      preLoaderRoute: typeof ProfileUserIdImport
      parentRoute: typeof rootRoute
    }
    '/review/$reviewId': {
      id: '/review/$reviewId'
      path: '/review/$reviewId'
      fullPath: '/review/$reviewId'
      preLoaderRoute: typeof ReviewReviewIdImport
      parentRoute: typeof rootRoute
    }
    '/verification/$secret': {
      id: '/verification/$secret'
      path: '/verification/$secret'
      fullPath: '/verification/$secret'
      preLoaderRoute: typeof VerificationSecretImport
      parentRoute: typeof rootRoute
    }
    '/chats/': {
      id: '/chats/'
      path: '/chats'
      fullPath: '/chats'
      preLoaderRoute: typeof ChatsIndexImport
      parentRoute: typeof rootRoute
    }
    '/collection/': {
      id: '/collection/'
      path: '/collection'
      fullPath: '/collection'
      preLoaderRoute: typeof CollectionIndexImport
      parentRoute: typeof rootRoute
    }
    '/explore/': {
      id: '/explore/'
      path: '/explore'
      fullPath: '/explore'
      preLoaderRoute: typeof ExploreIndexImport
      parentRoute: typeof rootRoute
    }
    '/manage-plans/': {
      id: '/manage-plans/'
      path: '/manage-plans'
      fullPath: '/manage-plans'
      preLoaderRoute: typeof ManagePlansIndexImport
      parentRoute: typeof rootRoute
    }
    '/people/': {
      id: '/people/'
      path: '/people'
      fullPath: '/people'
      preLoaderRoute: typeof PeopleIndexImport
      parentRoute: typeof rootRoute
    }
    '/post/update-post/$postId': {
      id: '/post/update-post/$postId'
      path: '/post/update-post/$postId'
      fullPath: '/post/update-post/$postId'
      preLoaderRoute: typeof PostUpdatePostPostIdImport
      parentRoute: typeof rootRoute
    }
    '/profile/schedule/$supportId': {
      id: '/profile/schedule/$supportId'
      path: '/profile/schedule/$supportId'
      fullPath: '/profile/schedule/$supportId'
      preLoaderRoute: typeof ProfileScheduleSupportIdImport
      parentRoute: typeof rootRoute
    }
    '/review/create-review/$userId': {
      id: '/review/create-review/$userId'
      path: '/review/create-review/$userId'
      fullPath: '/review/create-review/$userId'
      preLoaderRoute: typeof ReviewCreateReviewUserIdImport
      parentRoute: typeof rootRoute
    }
    '/booking/history/': {
      id: '/booking/history/'
      path: '/booking/history'
      fullPath: '/booking/history'
      preLoaderRoute: typeof BookingHistoryIndexImport
      parentRoute: typeof rootRoute
    }
    '/post/create-post/': {
      id: '/post/create-post/'
      path: '/post/create-post'
      fullPath: '/post/create-post'
      preLoaderRoute: typeof PostCreatePostIndexImport
      parentRoute: typeof rootRoute
    }
    '/profile/update-profile/': {
      id: '/profile/update-profile/'
      path: '/profile/update-profile'
      fullPath: '/profile/update-profile'
      preLoaderRoute: typeof ProfileUpdateProfileIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/booking/$bookingId': typeof BookingBookingIdRoute
  '/chats/$conversation': typeof ChatsConversationRoute
  '/post/$postId': typeof PostPostIdRoute
  '/profile/$userId': typeof ProfileUserIdRoute
  '/review/$reviewId': typeof ReviewReviewIdRoute
  '/verification/$secret': typeof VerificationSecretRoute
  '/chats': typeof ChatsIndexRoute
  '/collection': typeof CollectionIndexRoute
  '/explore': typeof ExploreIndexRoute
  '/manage-plans': typeof ManagePlansIndexRoute
  '/people': typeof PeopleIndexRoute
  '/post/update-post/$postId': typeof PostUpdatePostPostIdRoute
  '/profile/schedule/$supportId': typeof ProfileScheduleSupportIdRoute
  '/review/create-review/$userId': typeof ReviewCreateReviewUserIdRoute
  '/booking/history': typeof BookingHistoryIndexRoute
  '/post/create-post': typeof PostCreatePostIndexRoute
  '/profile/update-profile': typeof ProfileUpdateProfileIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/booking/$bookingId': typeof BookingBookingIdRoute
  '/chats/$conversation': typeof ChatsConversationRoute
  '/post/$postId': typeof PostPostIdRoute
  '/profile/$userId': typeof ProfileUserIdRoute
  '/review/$reviewId': typeof ReviewReviewIdRoute
  '/verification/$secret': typeof VerificationSecretRoute
  '/chats': typeof ChatsIndexRoute
  '/collection': typeof CollectionIndexRoute
  '/explore': typeof ExploreIndexRoute
  '/manage-plans': typeof ManagePlansIndexRoute
  '/people': typeof PeopleIndexRoute
  '/post/update-post/$postId': typeof PostUpdatePostPostIdRoute
  '/profile/schedule/$supportId': typeof ProfileScheduleSupportIdRoute
  '/review/create-review/$userId': typeof ReviewCreateReviewUserIdRoute
  '/booking/history': typeof BookingHistoryIndexRoute
  '/post/create-post': typeof PostCreatePostIndexRoute
  '/profile/update-profile': typeof ProfileUpdateProfileIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/booking/$bookingId': typeof BookingBookingIdRoute
  '/chats/$conversation': typeof ChatsConversationRoute
  '/post/$postId': typeof PostPostIdRoute
  '/profile/$userId': typeof ProfileUserIdRoute
  '/review/$reviewId': typeof ReviewReviewIdRoute
  '/verification/$secret': typeof VerificationSecretRoute
  '/chats/': typeof ChatsIndexRoute
  '/collection/': typeof CollectionIndexRoute
  '/explore/': typeof ExploreIndexRoute
  '/manage-plans/': typeof ManagePlansIndexRoute
  '/people/': typeof PeopleIndexRoute
  '/post/update-post/$postId': typeof PostUpdatePostPostIdRoute
  '/profile/schedule/$supportId': typeof ProfileScheduleSupportIdRoute
  '/review/create-review/$userId': typeof ReviewCreateReviewUserIdRoute
  '/booking/history/': typeof BookingHistoryIndexRoute
  '/post/create-post/': typeof PostCreatePostIndexRoute
  '/profile/update-profile/': typeof ProfileUpdateProfileIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/booking/$bookingId'
    | '/chats/$conversation'
    | '/post/$postId'
    | '/profile/$userId'
    | '/review/$reviewId'
    | '/verification/$secret'
    | '/chats'
    | '/collection'
    | '/explore'
    | '/manage-plans'
    | '/people'
    | '/post/update-post/$postId'
    | '/profile/schedule/$supportId'
    | '/review/create-review/$userId'
    | '/booking/history'
    | '/post/create-post'
    | '/profile/update-profile'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/booking/$bookingId'
    | '/chats/$conversation'
    | '/post/$postId'
    | '/profile/$userId'
    | '/review/$reviewId'
    | '/verification/$secret'
    | '/chats'
    | '/collection'
    | '/explore'
    | '/manage-plans'
    | '/people'
    | '/post/update-post/$postId'
    | '/profile/schedule/$supportId'
    | '/review/create-review/$userId'
    | '/booking/history'
    | '/post/create-post'
    | '/profile/update-profile'
  id:
    | '__root__'
    | '/'
    | '/booking/$bookingId'
    | '/chats/$conversation'
    | '/post/$postId'
    | '/profile/$userId'
    | '/review/$reviewId'
    | '/verification/$secret'
    | '/chats/'
    | '/collection/'
    | '/explore/'
    | '/manage-plans/'
    | '/people/'
    | '/post/update-post/$postId'
    | '/profile/schedule/$supportId'
    | '/review/create-review/$userId'
    | '/booking/history/'
    | '/post/create-post/'
    | '/profile/update-profile/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BookingBookingIdRoute: typeof BookingBookingIdRoute
  ChatsConversationRoute: typeof ChatsConversationRoute
  PostPostIdRoute: typeof PostPostIdRoute
  ProfileUserIdRoute: typeof ProfileUserIdRoute
  ReviewReviewIdRoute: typeof ReviewReviewIdRoute
  VerificationSecretRoute: typeof VerificationSecretRoute
  ChatsIndexRoute: typeof ChatsIndexRoute
  CollectionIndexRoute: typeof CollectionIndexRoute
  ExploreIndexRoute: typeof ExploreIndexRoute
  ManagePlansIndexRoute: typeof ManagePlansIndexRoute
  PeopleIndexRoute: typeof PeopleIndexRoute
  PostUpdatePostPostIdRoute: typeof PostUpdatePostPostIdRoute
  ProfileScheduleSupportIdRoute: typeof ProfileScheduleSupportIdRoute
  ReviewCreateReviewUserIdRoute: typeof ReviewCreateReviewUserIdRoute
  BookingHistoryIndexRoute: typeof BookingHistoryIndexRoute
  PostCreatePostIndexRoute: typeof PostCreatePostIndexRoute
  ProfileUpdateProfileIndexRoute: typeof ProfileUpdateProfileIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BookingBookingIdRoute: BookingBookingIdRoute,
  ChatsConversationRoute: ChatsConversationRoute,
  PostPostIdRoute: PostPostIdRoute,
  ProfileUserIdRoute: ProfileUserIdRoute,
  ReviewReviewIdRoute: ReviewReviewIdRoute,
  VerificationSecretRoute: VerificationSecretRoute,
  ChatsIndexRoute: ChatsIndexRoute,
  CollectionIndexRoute: CollectionIndexRoute,
  ExploreIndexRoute: ExploreIndexRoute,
  ManagePlansIndexRoute: ManagePlansIndexRoute,
  PeopleIndexRoute: PeopleIndexRoute,
  PostUpdatePostPostIdRoute: PostUpdatePostPostIdRoute,
  ProfileScheduleSupportIdRoute: ProfileScheduleSupportIdRoute,
  ReviewCreateReviewUserIdRoute: ReviewCreateReviewUserIdRoute,
  BookingHistoryIndexRoute: BookingHistoryIndexRoute,
  PostCreatePostIndexRoute: PostCreatePostIndexRoute,
  ProfileUpdateProfileIndexRoute: ProfileUpdateProfileIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/booking/$bookingId",
        "/chats/$conversation",
        "/post/$postId",
        "/profile/$userId",
        "/review/$reviewId",
        "/verification/$secret",
        "/chats/",
        "/collection/",
        "/explore/",
        "/manage-plans/",
        "/people/",
        "/post/update-post/$postId",
        "/profile/schedule/$supportId",
        "/review/create-review/$userId",
        "/booking/history/",
        "/post/create-post/",
        "/profile/update-profile/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/booking/$bookingId": {
      "filePath": "booking/$bookingId.tsx"
    },
    "/chats/$conversation": {
      "filePath": "chats/$conversation.tsx"
    },
    "/post/$postId": {
      "filePath": "post/$postId.tsx"
    },
    "/profile/$userId": {
      "filePath": "profile/$userId.tsx"
    },
    "/review/$reviewId": {
      "filePath": "review/$reviewId.tsx"
    },
    "/verification/$secret": {
      "filePath": "verification/$secret.tsx"
    },
    "/chats/": {
      "filePath": "chats/index.tsx"
    },
    "/collection/": {
      "filePath": "collection/index.tsx"
    },
    "/explore/": {
      "filePath": "explore/index.tsx"
    },
    "/manage-plans/": {
      "filePath": "manage-plans/index.tsx"
    },
    "/people/": {
      "filePath": "people/index.tsx"
    },
    "/post/update-post/$postId": {
      "filePath": "post/update-post/$postId.tsx"
    },
    "/profile/schedule/$supportId": {
      "filePath": "profile/schedule/$supportId.tsx"
    },
    "/review/create-review/$userId": {
      "filePath": "review/create-review/$userId.tsx"
    },
    "/booking/history/": {
      "filePath": "booking/history/index.tsx"
    },
    "/post/create-post/": {
      "filePath": "post/create-post/index.tsx"
    },
    "/profile/update-profile/": {
      "filePath": "profile/update-profile/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
